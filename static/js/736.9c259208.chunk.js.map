{"version":3,"file":"static/js/736.9c259208.chunk.js","mappings":"gRAEaA,EAAWC,EAAAA,EAAAA,GAAH,2JAMRC,EAAWD,EAAAA,EAAAA,GAAH,oDAGRE,EAAYF,EAAAA,EAAAA,IAAH,wCAGTG,EAAeH,EAAAA,EAAAA,IAAH,4I,SC+BzB,EAzCa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAWR,OATAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,gBAAwBJ,EAAxB,aADF,uBACbK,EADa,EACbA,KADa,kBAGdN,EAAQM,EAAKP,OAHC,2CAAH,qDAKpBK,GACD,GAAE,CAACH,KAGF,8BACGF,EAAKQ,OAAS,GACb,SAACd,EAAD,UACGM,EAAKS,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACxC,OAAqB,OAAjBF,GAEA,UAACf,EAAD,YACE,SAACC,EAAD,CACEiB,IAAK,sCAAwCH,EAC7CI,IAAKH,KAEP,UAACd,EAAD,YACE,kCAAUc,MACV,uCAAeC,UAPJH,GAYZ,IACR,OAGH,qEAIP,C,mCC1CD,IAAeM,EAAAA,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,QAAS,qC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","fetchMovieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListCast = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n`;\nexport const ItemCast = styled.li`\n  border: 1px solid black;\n`;\nexport const PhotoCast = styled.img`\n  width: 100%;\n`;\nexport const NamesBoxCast = styled.div`\n  background-color: #bfbfbf70;\n  padding: 15px;\n  box-shadow: 3px 3px 5px 0px rgb(115 115 115);\n  height: 75px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport fetchMovie from '../../fetchMovieAPI';\nimport { ListCast, ItemCast, PhotoCast, NamesBoxCast } from './Cast.styled';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      const { data } = await fetchMovie.get(`movie/${id}/credits`);\n\n      return setCast(data.cast);\n    };\n    fetchMovieById();\n  }, [id]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ListCast>\n          {cast.map(({ cast_id, profile_path, name, character }) => {\n            if (profile_path !== null) {\n              return (\n                <ItemCast key={cast_id}>\n                  <PhotoCast\n                    src={'https://image.tmdb.org/t/p/original' + profile_path}\n                    alt={name}\n                  />\n                  <NamesBoxCast>\n                    <p>Name: {name}</p>\n                    <p>Character: {character}</p>\n                  </NamesBoxCast>\n                </ItemCast>\n              );\n            }\n            return null;\n          })}\n        </ListCast>\n      ) : (\n        <h3>We don't have any casts for this movie.</h3>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: '3230ff1c700de8d039224f45161518d9',\n  },\n});\n"],"names":["ListCast","styled","ItemCast","PhotoCast","NamesBoxCast","useState","cast","setCast","id","useParams","useEffect","fetchMovieById","fetchMovie","data","length","map","cast_id","profile_path","name","character","src","alt","axios","baseURL","headers","params","api_key"],"sourceRoot":""}