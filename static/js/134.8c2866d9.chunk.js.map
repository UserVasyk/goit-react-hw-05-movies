{"version":3,"file":"static/js/134.8c2866d9.chunk.js","mappings":"6QAEaA,EAAaC,EAAAA,EAAAA,KAAH,4PAYVC,EAAcD,EAAAA,EAAAA,MAAH,2VAgBXE,EAAqBF,EAAAA,EAAAA,OAAH,6D,SCvBlBG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQA,OACE,UAACR,EAAD,CAAYK,SALS,SAAAI,GACrBA,EAAEC,iBACFL,EAASE,EACV,EAEC,WACE,SAACL,EAAD,CACES,UAAQ,EACRC,UAAU,IACVC,YAAY,gBACZC,KAAK,OACLC,SAdiB,SAAAN,GACrBD,EAAeC,EAAEO,OAAOC,MACzB,KAeG,SAACd,EAAD,CAAoBW,KAAK,SAAzB,sBAGL,E,SCQD,EAhCe,WAAO,IAAD,EACnB,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOY,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOb,EAAP,KAAoBC,EAApB,KACMa,EAAK,UAAGd,EAAYe,IAAI,gBAAnB,QAA+B,IAC1CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CAGA,IAAMG,EAAiB,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,+BACGJ,EADH,+CADC,uBAChBK,EADgB,EAChBA,KADgB,kBAKjBP,EAAgBO,EAAKC,UALJ,2CAAH,qDAQvBH,GATC,CAUF,GAAE,CAACH,IAIJ,OACE,iCACE,SAACjB,EAAD,CAAWC,SALE,SAAAgB,GACfb,EAAe,CAAEa,MAAAA,GAClB,IAIIH,EAAaU,OAAS,GACrB,SAACC,EAAA,EAAD,CAAWC,OAAQZ,KAEnB,eAAIa,MAAO,CAAEC,UAAW,UAAxB,+CAIP,C,8GClCYC,EAAkBhC,EAAAA,EAAAA,GAAH,yNASfiC,EAAQjC,EAAAA,EAAAA,IAAH,8CAGLkC,GAAalC,EAAAA,EAAAA,GAAOmC,EAAAA,GAAPnC,CAAH,gHAMVoC,EAAUpC,EAAAA,EAAAA,IAAH,qW,SCXP4B,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBQ,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGH,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAA1B,OACV,yBACE,UAACT,EAAD,CAAYU,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAAhD,WACE,SAACJ,EAAD,CACEc,IAAKN,EACLO,IACkB,OAAhBN,EACIO,EADJ,6CAE0CP,MAG9C,SAACN,EAAD,UAAUK,GAAQE,QAVbH,EADC,KAiBjB,C,mCC5BD,IAAeU,EAAAA,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,QAAS,qC","sources":["components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","Pages/Movies/Movies.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","fetchMovieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin: 0 auto;\n  max-width: 400px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 4px;\n  overflow: hidden;\n  height: 40px;\n`;\nexport const InputStyled = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-style: inherit;\n  font-variant: inherit;\n  font-weight: inherit;\n  font-stretch: inherit;\n  line-height: inherit;\n  font-family: inherit;\n  font-size: 20px;\n  height: 100%;\n  outline: none;\n  padding-left: 5px;\n  padding-right: 5px;\n  border: 1px solid #a4a4a4;\n`;\nexport const ButtonSubmitStyled = styled.button`\n  height: 100%;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  InputStyled,\n  FormStyled,\n  ButtonSubmitStyled,\n} from './SearchBox.styled';\nexport const SearchBox = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const OnHandleChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchQuery);\n  };\n  return (\n    <FormStyled onSubmit={onHandleSubmit}>\n      <InputStyled\n        required\n        minLength=\"1\"\n        placeholder=\"Search movies\"\n        type=\"text\"\n        onChange={OnHandleChange}\n      />\n\n      <ButtonSubmitStyled type=\"submit\">Search</ButtonSubmitStyled>\n    </FormStyled>\n  );\n};\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport fetchMovie from '../../fetchMovieAPI';\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query') ?? '';\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const fetchSearchMovies = async () => {\n      const { data } = await fetchMovie.get(\n        `/search/movie?&query=${query}&language=en-US&page=1&include_adult=false`\n      );\n\n      return setSearchMovies(data.results);\n    };\n\n    fetchSearchMovies();\n  }, [query]);\n  const onSubmit = query => {\n    setSearchQuery({ query });\n  };\n  return (\n    <>\n      <SearchBox onSubmit={onSubmit} />\n      {searchMovies.length > 0 ? (\n        <MovieList movies={searchMovies} />\n      ) : (\n        <h3 style={{ textAlign: 'center' }}>Type a movie with correct name.</h3>\n      )}\n    </>\n  );\n};\nexport default Movies;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nexport const MovieListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  margin: 0px auto;\n  padding: 0px;\n  margin-bottom: 30px;\n`;\nexport const Image = styled.img`\n  min-height: 480px;\n`;\nexport const LinkStyled = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  text-decoration: none;\n`;\nexport const NameBox = styled.div`\n  border: solid 1px #000000;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #e9e9e9;\n  color: #000000;\n  font-weight: 500;\n  padding: 20px 10px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 1px 3px 0px, rgb(0 0 0 / 14%) 0px 1px 1px 0px,\n    rgb(0 0 0 / 12%) 0px 2px 1px -1px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultMoviePoster from '../../images/defaultMoviePoster.jpg';\nimport {\n  MovieListStyled,\n  Image,\n  LinkStyled,\n  NameBox,\n} from './MovieList.styled';\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, name, poster_path, original_title }) => (\n        <li key={id}>\n          <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              alt={name}\n              src={\n                poster_path === null\n                  ? defaultMoviePoster\n                  : `https://image.tmdb.org/t/p/original${poster_path}`\n              }\n            ></Image>\n            <NameBox>{name || original_title}</NameBox>\n          </LinkStyled>\n        </li>\n      ))}\n    </MovieListStyled>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: '3230ff1c700de8d039224f45161518d9',\n  },\n});\n"],"names":["FormStyled","styled","InputStyled","ButtonSubmitStyled","SearchBox","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","required","minLength","placeholder","type","onChange","target","value","searchMovies","setSearchMovies","useSearchParams","query","get","useEffect","fetchSearchMovies","fetchMovie","data","results","length","MovieList","movies","style","textAlign","MovieListStyled","Image","LinkStyled","NavLink","NameBox","location","useLocation","map","id","name","poster_path","original_title","to","state","from","alt","src","defaultMoviePoster","axios","baseURL","headers","params","api_key"],"sourceRoot":""}