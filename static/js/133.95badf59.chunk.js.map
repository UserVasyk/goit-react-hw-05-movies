{"version":3,"file":"static/js/133.95badf59.chunk.js","mappings":"iQAEaA,E,OAAQC,EAAAA,GAAH,uE,SCoBlB,EAlBa,WACX,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGACAC,EAAAA,EAAAA,IAAe,oBADf,gBACfC,EADe,EACfA,KAERJ,EAAeI,EAAKC,SAHG,2CAAH,qDAKtBH,GACD,GAAE,KAGD,6BACE,SAACN,EAAD,8BACA,SAACU,EAAA,EAAD,CAAWC,OAAQR,MAGxB,C,8GCnBYS,EAAkBX,EAAAA,EAAAA,GAAH,yNASfY,EAAQZ,EAAAA,EAAAA,IAAH,8CAGLa,GAAab,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,gHAMVe,EAAUf,EAAAA,EAAAA,IAAH,qW,SCXPS,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBM,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGD,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAA1B,OACV,yBACE,UAACT,EAAD,CAAYU,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAAhD,WACE,SAACJ,EAAD,CACEc,IAAKN,EACLO,IACkB,OAAhBN,EACIO,EADJ,6CAE0CP,MAG9C,SAACN,EAAD,UAAUK,GAAQE,QAVbH,EADC,KAiBjB,C,mCC5BD,IAAeU,EAAAA,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,QAAS,qC","sources":["Pages/Home/Home.styled.jsx","Pages/Home/Home.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","fetchMovieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport fetchMovie from '../../fetchMovieAPI';\nimport { Title } from './Home.styled';\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  useEffect(() => {\n    const fetchTrendMovies = async () => {\n      const { data } = await fetchMovie.get('trending/all/day');\n\n      setTrendMovies(data.results);\n    };\n    fetchTrendMovies();\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <MovieList movies={trendMovies} />\n    </main>\n  );\n};\nexport default Home;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nexport const MovieListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  margin: 0px auto;\n  padding: 0px;\n  margin-bottom: 30px;\n`;\nexport const Image = styled.img`\n  min-height: 480px;\n`;\nexport const LinkStyled = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  text-decoration: none;\n`;\nexport const NameBox = styled.div`\n  border: solid 1px #000000;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #e9e9e9;\n  color: #000000;\n  font-weight: 500;\n  padding: 20px 10px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 1px 3px 0px, rgb(0 0 0 / 14%) 0px 1px 1px 0px,\n    rgb(0 0 0 / 12%) 0px 2px 1px -1px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultMoviePoster from '../../images/defaultMoviePoster.jpg';\nimport {\n  MovieListStyled,\n  Image,\n  LinkStyled,\n  NameBox,\n} from './MovieList.styled';\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, name, poster_path, original_title }) => (\n        <li key={id}>\n          <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              alt={name}\n              src={\n                poster_path === null\n                  ? defaultMoviePoster\n                  : `https://image.tmdb.org/t/p/original${poster_path}`\n              }\n            ></Image>\n            <NameBox>{name || original_title}</NameBox>\n          </LinkStyled>\n        </li>\n      ))}\n    </MovieListStyled>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: '3230ff1c700de8d039224f45161518d9',\n  },\n});\n"],"names":["Title","styled","useState","trendMovies","setTrendMovies","useEffect","fetchTrendMovies","fetchMovie","data","results","MovieList","movies","MovieListStyled","Image","LinkStyled","NavLink","NameBox","location","useLocation","map","id","name","poster_path","original_title","to","state","from","alt","src","defaultMoviePoster","axios","baseURL","headers","params","api_key"],"sourceRoot":""}