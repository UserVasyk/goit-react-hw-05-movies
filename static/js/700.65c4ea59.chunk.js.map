{"version":3,"file":"static/js/700.65c4ea59.chunk.js","mappings":"uSAGaA,EAAwBC,EAAAA,EAAAA,KAAH,mIAOrBC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sNAYVG,GAAiBH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,wKAUdK,EAAYL,EAAAA,EAAAA,EAAH,oEAITM,EAAYN,EAAAA,EAAAA,GAAH,4EAITO,EAAkBP,EAAAA,EAAAA,IAAH,+IAOfQ,EAAYR,EAAAA,EAAAA,IAAH,6H,SC6CtB,EA9EqB,WAAO,IAAD,IACzB,GAA0BS,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEpDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,sGACEC,EAAAA,EAAAA,IAAA,gBACPV,IACbW,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IAHO,uBACbE,EADa,EACbA,KADa,kBAIdf,EAASe,IAJK,2CAAH,qDAMpBL,GACD,GAAE,CAACT,IACJ,IACEe,EAOEjB,EAPFiB,YACAC,EAMElB,EANFkB,eACAC,EAKEnB,EALFmB,KACAC,EAIEpB,EAJFoB,aACAC,EAGErB,EAHFqB,aACAC,EAEEtB,EAFFsB,SACAC,EACEvB,EADFuB,OAGF,OACE,SAAClC,EAAD,UACGmC,OAAOC,KAAKzB,GAAO0B,OAAS,IAC3B,iCACE,SAACjC,EAAD,CAAgBkC,GAAIrB,EAAasB,QAAjC,6BAGA,UAAC/B,EAAD,YACE,gBACEgC,OAAQ,IACRC,IACkB,OAAhBb,EACIc,EADJ,6CAE0Cd,GAE5Ce,IAAI,MAEN,UAAClC,EAAD,YACE,kCAAQqB,GAAQD,EAAhB,aAAmCE,EAAaa,MAC9C,EACA,GAFF,QAIA,wCAAgBC,KAAKC,KAAoB,GAAfd,GAA1B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOa,KAAI,gBAAGlC,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALjB,EADC,aAMlB,4BACE,SAACP,EAAD,sCACA,UAACC,EAAD,YACE,0BACG,KACD,SAACL,EAAD,CAAYoC,GAAG,OAAf,sBAEF,yBACE,SAACpC,EAAD,CAAYoC,GAAG,UAAf,8BAIN,SAAC,EAAAU,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,UAMX,C,mCCzFD,IAAeC,EAAAA,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,QAAS,qC","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","fetchMovieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 30px;\n  align-items: center;\n`;\nexport const LinkStyled = styled(NavLink)`\n  font-size: 25px;\n  color: blue;\n  text-decoration: none;\n  transition: color 250ms ease;\n  &.active,\n  :hover,\n  :focus {\n    text-decoration: underline;\n    color: #fdab14;\n  }\n`;\nexport const BackLinkStyled = styled(Link)`\n  font-size: 25px;\n  color: blue;\n  text-decoration: none;\n  transition: color 250ms ease;\n  :hover,\n  :focus {\n    color: #fdab14;\n  }\n`;\nexport const TitleLink = styled.p`\n  font-size: 30px;\n  margin-bottom: 15px;\n`;\nexport const ListLinks = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\nexport const MovieDetailsBox = styled.div`\n  display: flex;\n  padding: 15px;\n  border-bottom: solid 1px black;\n  border-top: solid 1px black;\n  width: 100%;\n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  gap: 25px;\n  font-size: 20px;\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport fetchMovie from '../../fetchMovieAPI';\nimport defaultMoviePoster from '../../images/defaultMoviePoster.jpg';\nimport {\n  MovieDetailsContainer,\n  LinkStyled,\n  TitleLink,\n  ListLinks,\n  BackLinkStyled,\n  MovieInfo,\n  MovieDetailsBox,\n} from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      const { data } = await fetchMovie\n        .get(`movie/${id}`)\n        .catch(error => console.error(error));\n      return setMovie(data);\n    };\n    fetchMovieById();\n  }, [id]);\n  const {\n    poster_path,\n    original_title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <MovieDetailsContainer>\n      {Object.keys(movie).length > 0 && (\n        <>\n          <BackLinkStyled to={backLinkHref.current}>\n            Back to movies\n          </BackLinkStyled>\n          <MovieDetailsBox>\n            <img\n              height={400}\n              src={\n                poster_path === null\n                  ? defaultMoviePoster\n                  : `https://image.tmdb.org/t/p/original${poster_path}`\n              }\n              alt=\"\"\n            />\n            <MovieInfo>\n              <h2>{`${name || original_title} (${release_date.slice(\n                0,\n                4\n              )})`}</h2>\n              <p>User Score: {Math.ceil(vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </MovieInfo>\n          </MovieDetailsBox>\n          <div>\n            <TitleLink>Additional Information</TitleLink>\n            <ListLinks>\n              <li>\n                {' '}\n                <LinkStyled to=\"cast\">Cast</LinkStyled>\n              </li>\n              <li>\n                <LinkStyled to=\"reviews\">Reviews</LinkStyled>\n              </li>\n            </ListLinks>\n          </div>\n          <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </MovieDetailsContainer>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: '3230ff1c700de8d039224f45161518d9',\n  },\n});\n"],"names":["MovieDetailsContainer","styled","LinkStyled","NavLink","BackLinkStyled","Link","TitleLink","ListLinks","MovieDetailsBox","MovieInfo","useState","movie","setMovie","id","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieById","fetchMovie","catch","error","console","data","poster_path","original_title","name","release_date","vote_average","overview","genres","Object","keys","length","to","current","height","src","defaultMoviePoster","alt","slice","Math","ceil","map","Suspense","fallback","axios","baseURL","headers","params","api_key"],"sourceRoot":""}